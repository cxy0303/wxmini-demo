var split = function(value, speator) {
  var result = [];
  if (value && value.split(speator)) {
    result = value.split(speator);
  }
  return result;
}

var formatdate = function(value) {
  var date = getDate(value);
  return date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日';
};

var formattime = function(value) {
  if (!value) {
    return '';
  }
  var date = getDate(value);
  var year = date.getFullYear();
  var month = date.getMonth() + 1
  var day = date.getDate();
  var hour = date.getHours();
  var minute = date.getMinutes();
  var result = [];
  result.push(year);
  result.push('年');
  result.push(month);
  result.push('月');
  result.push(day);
  result.push('日');
  result.push(' ');
  result.push(hour);
  result.push(':');
  result.push(minute);
  return result.join('');
};

var regYear = getRegExp("(y+)", "i");

var dateFormat = function(timestamp, format) {
  if (!format) {
    format = "yyyy-MM-dd hh:mm:ss";
  }
  timestamp = parseInt(timestamp);
  // 通过getDate()方法获取date类型的时间
  var realDate = getDate(timestamp);
  function timeFormat(num) {
    return num < 10 ? '0' + num : num;
  }
  var date = [
    ["M+", timeFormat(realDate.getMonth() + 1)],
    ["d+", timeFormat(realDate.getDate())],
    ["h+", timeFormat(realDate.getHours())],
    ["m+", timeFormat(realDate.getMinutes())],
    ["s+", timeFormat(realDate.getSeconds())],
    ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
    ["S+", realDate.getMilliseconds()],
  ];
  var reg1 = regYear.exec(format);
  if (reg1) {
    format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length));
  }
  for (var i = 0; i < date.length; i++) {
    var k = date[i][0];
    var v = date[i][1];
    // getRegExp初始化一个正则表达式对象
    var reg2 = getRegExp("(" + k + ")").exec(format);
    if (reg2) {
      format = format.replace(reg2[1], reg2[1].length == 1 ?
        v : ("00" + v).substring(("" + v).length));
    }
  }
  return format;
}


var indexOf = function(value, keyword) {
  if (value) {
    return value.indexOf(keyword);
  }
  return -1;
}

module.exports = {
  split: split,
  formattime: formattime,
  dateFormat: dateFormat,
  indexOf: indexOf
}